#!/bin/bash -
# shellcheck disable=2048

NOW=$(date +%s)
MAX=90


##################################################
# Rotate key

rotate() {
    ACCESS_KEY_ID=""
    SECRET_ACCESS_KEY=""

    # Create new key
    NEW_KEY=$(2>&- aws --output json iam create-access-key --query AccessKey)
    if [ "${NEW_KEY}" == "" ]; then
	echo -n "can't create key"
	return
    fi

    # Get new key
    ACCESS_KEY_ID=$(echo "${NEW_KEY}" | jq -r '.AccessKeyId')
    SECRET_ACCESS_KEY=$(echo "${NEW_KEY}" | jq -r '.SecretAccessKey')

    # Delete old key
    aws iam delete-access-key --access-key-id "$1"

    # Update profile with new key
    aws configure set aws_access_key_id "${ACCESS_KEY_ID}"
    aws configure set aws_secret_access_key "${SECRET_ACCESS_KEY}"
}


##################################################
# Loop over all profiles

for AWS_PROFILE in ${*:-$(aws configure list-profiles)}; do
    if [ "${AWS_PROFILE}" == "-f" ]; then
	MAX=0
	continue
    fi

    KEY=$(aws configure get aws_access_key_id)

    # Check only "static" keys
    if [ "${KEY}" != "" ] && [ "$(aws configure get aws_session_token)" == "" ]; then
	echo -n "Checking ${AWS_PROFILE}: "

	# Get key creation date
	CREATED=$(2>&- aws --output text iam list-access-keys --query 'AccessKeyMetadata[].CreateDate' --max-items 1 --no-paginate)
	if [ "${CREATED}" == "" ]; then echo "can't get key"; continue; fi

	# Check age of key
	if [ $(( NOW - $(gdate -d "${CREATED}" +%s) )) -gt $(( MAX * 86400 )) ]; then
	    echo -n "${KEY} - "
	    rotate "${KEY}"
	    echo "${ACCESS_KEY_ID}"
	else
	    echo "less than ${MAX} days old"
	fi
    fi
done
